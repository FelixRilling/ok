{"version":3,"file":"ok.common.js","sources":["esm/src/dom/getInputElementValue.js","esm/src/dom/setCustomValidity.js","esm/src/Ok.js"],"sourcesContent":["/**\n * Checks if an input is a radio or a checkbox.\n *\n * @private\n * @param element HTMLInputElement to check.\n * @returns if the element is checkbox-like.\n */\nconst isInputElementCheckboxLike = (element) => element.type === \"checkbox\" || element.type === \"radio\";\n/**\n * Returns input element specific value.\n *\n * @private\n * @param element HTMLInputElement to get the value of.\n * @returns value of the element, either a string or a boolean.\n */\nconst getInputElementValue = (element) => isInputElementCheckboxLike(element) ? element.checked : element.value;\nexport { getInputElementValue };\n//# sourceMappingURL=getInputElementValue.js.map","/**\n * Helper function to set validity status of elements.\n *\n * @private\n * @return If the current browser supports custom validity.\n */\nconst browserSupportsValidation = () => HTMLInputElement.prototype.setCustomValidity != null;\n/**\n * Helper function to set validity status of elements.\n *\n * @private\n * @param element HTMLInputElement to set the validity status for.\n * @param msg Validity message to add.\n */\nconst setCustomValidity = (element, msg) => {\n    if (browserSupportsValidation()) {\n        element.setCustomValidity(msg);\n    }\n};\nexport { setCustomValidity };\n//# sourceMappingURL=setCustomValidity.js.map","import { getInputElementValue } from \"./dom/getInputElementValue\";\nimport { setCustomValidity } from \"./dom/setCustomValidity\";\n/**\n * Ok class.\n *\n * @class\n */\nclass Ok {\n    /**\n     * Ok constructor.\n     *\n     * @public\n     * @param {object} validators Object containing the validators to use.\n     * @param {string|boolean} [invalidClass=\"invalid\"] CSS class for invalid elements, or false if none should be set.\n     */\n    constructor(validators, invalidClass = \"invalid\") {\n        this.map = new Map(Object.entries(validators));\n        this.invalidClass = invalidClass;\n    }\n    /**\n     * Validates an input element and returns if it was valid.\n     * Usually called through {@link Ok#bind}.\n     *\n     * @public\n     * @param {HTMLInputElement} element HTMLInputElement to validate.\n     * @param {Event?} e optional event that triggered validation.\n     * @returns {boolean} current validity of the element.\n     */\n    validate(element, e) {\n        if (!element.dataset.ok) {\n            throw new Error(\"No validators are assigned to the element.\");\n        }\n        const validatorList = element.dataset.ok\n            .split(\",\")\n            .map((str) => str.trim());\n        const value = getInputElementValue(element);\n        let result = true;\n        for (const validatorListEntry of validatorList) {\n            if (result) {\n                if (!this.map.has(validatorListEntry)) {\n                    throw new Error(`Validator '${validatorListEntry}' is not registered.`);\n                }\n                const validator = this.map.get(validatorListEntry);\n                if (!validator.fn(value, element, e)) {\n                    result = false;\n                    const msg = typeof validator.msg === \"function\"\n                        ? validator.msg(value, element, e)\n                        : validator.msg;\n                    setCustomValidity(element, msg);\n                }\n            }\n        }\n        if (result) {\n            setCustomValidity(element, \"\");\n            if (this.invalidClass) {\n                element.classList.remove(this.invalidClass);\n            }\n        }\n        else if (this.invalidClass) {\n            element.classList.add(this.invalidClass);\n        }\n        return result;\n    }\n    /**\n     * Binds a {@link Ok#validate} event handler to an input element.\n     *\n     * @public\n     * @param {HTMLInputElement} element HTMLInputElement to bind.\n     * @param {string} [eventType=\"input\"] Event type to bind.\n     */\n    bind(element, eventType = \"input\") {\n        element.addEventListener(eventType, (e) => this.validate(element, e));\n    }\n}\nexport { Ok };\n//# sourceMappingURL=Ok.js.map"],"names":[],"mappings":"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"}