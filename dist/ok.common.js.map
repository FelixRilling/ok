{"version":3,"file":"ok.common.js","sources":["../node_modules/lightdash/dist/esm/src/is/typeOf.js","../node_modules/lightdash/dist/esm/src/is/undefined.js","../node_modules/lightdash/dist/esm/src/str/lib/Delimiters.js","../node_modules/lightdash/dist/esm/src/map/fromObject.js","esm/src/dom/browserSupportsValidation.js","esm/src/dom/isInputElementCheckboxLike.js","esm/src/dom/getInputElementValue.js","esm/src/Ok.js"],"sourcesContent":["/**\n * Checks if the value has any of the given types.\n * If at least one type gives back true, true is returned.\n *\n * @memberof Is\n * @since 1.0.0\n * @param {any} val Value to check.\n * @param {...string} types Type strings to compare the value to.\n * @returns {boolean} If the value has the type provided.\n * @example\n * isTypeOf(\"foo\", \"string\")\n * // => true\n *\n * isTypeOf(\"foo\", \"number\", \"string\")\n * // => true\n *\n * isTypeOf(\"foo\", \"number\")\n * // => false\n */\nconst isTypeOf = (val, ...types) => types.some(type => typeof val === type);\nexport { isTypeOf };\n//# sourceMappingURL=typeOf.js.map","import { isTypeOf } from \"./typeOf\";\n/**\n * Checks if a value is undefined.\n *\n * @memberof Is\n * @since 1.0.0\n * @param {any} val Value to check.\n * @returns {boolean} If the value is undefined.\n * @example\n * const a = {};\n *\n * isUndefined(a.b)\n * // => true\n *\n * isUndefined(undefined)\n * // => true\n *\n * isUndefined(null)\n * // => false\n *\n * isUndefined(1)\n * // => false\n */\nconst isUndefined = (val) => isTypeOf(val, \"undefined\");\nexport { isUndefined };\n//# sourceMappingURL=undefined.js.map","var Delimiters;\n(function (Delimiters) {\n    Delimiters[\"KEBAB\"] = \"-\";\n    Delimiters[\"SNAKE\"] = \"_\";\n})(Delimiters || (Delimiters = {}));\nexport { Delimiters };\n//# sourceMappingURL=Delimiters.js.map","/**\n * Creates a map from an object.\n *\n * @memberof Map\n * @since 1.0.0\n * @param {Object} obj Object to use.\n * @returns {Map} Map created from the object.\n * @example\n * mapFromObject({a: 1, b: 4, c: 5})\n * // => Map<string,number>{a: 1, b: 4, c: 5}\n */\nconst mapFromObject = (obj) => new Map(Object.entries(obj));\nexport { mapFromObject };\n//# sourceMappingURL=fromObject.js.map","import { isUndefined } from \"lightdash\";\nconst browserSupportsValidation = () => \n// eslint-disable-next-line @typescript-eslint/unbound-method\n!isUndefined(HTMLInputElement.prototype.setCustomValidity);\nexport { browserSupportsValidation };\n//# sourceMappingURL=browserSupportsValidation.js.map","/**\n * Checks if an input is a radio or a checkbox.\n *\n * @private\n * @param {HTMLInputElement} element HTMLInputElement to check.\n * @returns {boolean} if the element is checkbox-like.\n */\nconst isInputElementCheckboxLike = (element) => element.type === \"checkbox\" || element.type === \"radio\";\nexport { isInputElementCheckboxLike };\n//# sourceMappingURL=isInputElementCheckboxLike.js.map","import { isInputElementCheckboxLike } from \"./isInputElementCheckboxLike\";\n/**\n * Returns input element specific value.\n *\n * @private\n * @param {HTMLInputElement} element HTMLInputElement to get the value of.\n * @returns {string|boolean} value of the element, either a string or a boolean.\n */\nconst getInputElementValue = (element) => isInputElementCheckboxLike(element) ? element.checked : element.value;\nexport { getInputElementValue };\n//# sourceMappingURL=getInputElementValue.js.map","import { mapFromObject } from \"lightdash\";\nimport { browserSupportsValidation } from \"./dom/browserSupportsValidation\";\nimport { getInputElementValue } from \"./dom/getInputElementValue\";\n/**\n * @class\n */\nconst Ok = class {\n    /**\n     * Ok class.\n     *\n     * @public\n     * @param {object} validators object containing the validators to use.\n     * @param {string|boolean} [invalidClass=\"invalid\"] CSS class for invalid elements, or false if none should be set.\n     */\n    constructor(validators, invalidClass = \"invalid\") {\n        this.map = mapFromObject(validators);\n        this.invalidClass = invalidClass;\n    }\n    /**\n     * Validates an input element and returns the validity.\n     *\n     * @public\n     * @param {HTMLInputElement} element HTMLInputElement to validate.\n     * @param {...any[]} args optional arguments to pass.\n     * @returns {boolean} current validity of the element.\n     */\n    validate(element, ...args) {\n        if (!element.dataset.ok) {\n            throw new Error(\"no validator assigned\");\n        }\n        const value = getInputElementValue(element);\n        const validatorList = element.dataset.ok\n            .split(\",\")\n            .map(str => str.trim());\n        let result = true;\n        validatorList.forEach(validatorListEntry => {\n            if (result) {\n                if (!this.map.has(validatorListEntry)) {\n                    throw new Error(`missing validator '${validatorListEntry}'`);\n                }\n                const validator = this.map.get(validatorListEntry);\n                if (!validator.fn(value, element, ...args)) {\n                    result = false;\n                    if (browserSupportsValidation()) {\n                        element.setCustomValidity(validator.msg);\n                    }\n                }\n            }\n        });\n        if (result) {\n            if (browserSupportsValidation()) {\n                element.setCustomValidity(\"\");\n            }\n            if (this.invalidClass) {\n                element.classList.remove(this.invalidClass);\n            }\n        }\n        else if (this.invalidClass) {\n            element.classList.add(this.invalidClass);\n        }\n        return result;\n    }\n    /**\n     * Binds an event handler to an input element.\n     *\n     * @public\n     * @param {HTMLInputElement} element HTMLInputElement to bind.\n     * @param {string} [eventType=\"input\"] event type to bind.\n     */\n    bind(element, eventType = \"input\") {\n        element.addEventListener(eventType, e => this.validate(element, e));\n    }\n};\nexport { Ok };\n//# sourceMappingURL=Ok.js.map"],"names":[],"mappings":"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"}